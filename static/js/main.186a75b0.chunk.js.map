{"version":3,"sources":["homepage/Navbar.js","homepage/Introduction.js","homepage/Feedback.js","homepage/About.js","app/Render.js","app/textGenerator.js","app/setPrompt.js","homepage/PromptSetting.js","app/enterKey.js","homepage/Custom.js","app/Stats.js","app/KeySummary.js","app/statUpdater.js","app/App.js","homepage/Home.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","Navbar","variant","bg","id","Brand","as","Link","to","Toggle","aria-controls","Collapse","className","Nav","NavDropdown","title","Item","process","React","Component","Introduction","Jumbotron","style","background","Button","Feedback","Form","Row","Col","Group","Label","Control","type","display","Check","label","name","rows","About","Accordion","Card","Header","eventKey","Body","Render","hitKey","bind","document","getElementById","focus","event","ind","this","data","update","index","keyCode","enterStat","enterKey","arr","length","correction","substr","prompt","key","String","fromCharCode","data-testid","tabIndex","onKeyDown","map","element","i","correctness","value","color","fontWeights","slice","generate","obj","numArr","num","Array","from","Math","floor","word","random","wordArr","randomWords","surroundArr","Object","entries","paran","filter","x","cap","toUpperCase","around","spChar","concat","sort","a","b","join","default_state","PromptSetting","check","e","dic","target","checked","ret","items","func","fromEntries","xs","onChange","disabled","inline","all","controlId","column","sm","default_data","last_char","error","ReactRedux","state","config","setPrompt","dispatch","setConfig","payload","Modal","show","onHide","setClose","closeButton","Title","Footer","onClick","textGenerator","Stats","wordPerMinute","efficiency","reset","refresh","progress","toggle","setShow","setState","setTimeout","timestart","words","sec","Date","now","round","counter","correct","len","statUpdater","timeStart","numSpace","keyCounter","correctKey","ProgressBar","animated","width","KeySummary","summary","height","handleResize","clientWidth","window","addEventListener","str","dir","k","y","dat","axisStyle","ticks","fontSize","fill","ref","xType","yDomain","margin","left","top","stats_default","timeEnd","lessons","basics","caps","numbers","brackets","characters","master","App","setToggle","match","params","lesson","handleSelect","prevProps","tog","Tabs","onSelect","Tab","Home","Container","path","component","exact","combineReducer","Redux","allButLast","lastElement","assign","action","store","Boolean","location","hostname","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"gSAGqBA,E,kDACjB,WAAYC,GAAO,uCACTA,G,qDAKN,OACI,6BACG,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,OAAQC,GAAG,UACpC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KAA3B,WACA,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BACzB,kBAACT,EAAA,EAAOU,SAAR,CAAiBP,GAAG,wBAAwBQ,UAAW,uBAC3D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaZ,QAAQ,OAAOa,MAAM,SAASX,GAAG,2BAC1C,kBAACU,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,0BAAhC,yBACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,wBAAhC,4BACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,2BAAhC,0BACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,4BAAhC,2BACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,8BAAhC,6BACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,GAAIC,IAAMC,GAAIS,0BAAhC,0BAEJ,kBAACJ,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAIS,mBAAxB,YACA,kBAACJ,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAIS,gBAAxB,iB,GAvBkBC,IAAMC,W,kBCEvBC,E,uKAEb,OACI,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAACC,WAAW,gBAC9B,4CACA,6GACA,kBAACC,EAAA,EAAD,CAAQlB,GAAIC,IAAMC,GAAKS,yBAA4Cf,QAAQ,eAAeU,UAAU,OAApG,sB,GAN8BM,IAAMC,W,gBCF3BM,E,uKAEb,OACI,yBAAKb,UAAU,gBACX,wCACA,kHACA,kBAACc,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,KACI,kBAACC,EAAA,EAAD,KACI,kBAACF,EAAA,EAAKG,MAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAG3B,kBAACJ,EAAA,EAAD,KACI,kBAACF,EAAA,EAAKG,MAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAG1B,kBAACJ,EAAA,EAAD,KACG,kBAACF,EAAA,EAAKG,MAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,YAIvB,kBAACN,EAAA,EAAKG,MAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAK/B,kBAACN,EAAA,EAAKG,MAAN,KACA,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAACW,QAAQ,UAA5B,6BACI,kBAACP,EAAA,EAAKC,IAAN,KACI,kBAACC,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAaC,MAAM,iBAAiBH,KAAK,cAC/C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAaC,MAAM,eAAeH,KAAK,cAC7C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAaC,MAAM,aAAaH,KAAK,gBAQnD,kBAACN,EAAA,EAAKG,MAAN,KACA,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAACW,QAAQ,UAA5B,+BACI,kBAACP,EAAA,EAAKC,IAAN,KACI,kBAACC,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAYE,KAAK,QAAQD,MAAM,IAAIH,KAAK,WAC9C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAYE,KAAK,QAAQD,MAAM,IAAIH,KAAK,WAC9C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAYE,KAAK,QAAQD,MAAM,IAAIH,KAAK,WAC9C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAYE,KAAK,QAAQD,MAAM,IAAIH,KAAK,WAC9C,kBAACJ,EAAA,EAAD,SAAM,kBAACF,EAAA,EAAKQ,MAAN,CAAYE,KAAK,QAAQD,MAAM,IAAIH,KAAK,aAMtD,kBAACN,EAAA,EAAKG,MAAN,KACA,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAACW,QAAQ,UAA5B,2BACA,kBAACP,EAAA,EAAKK,QAAN,CAAczB,GAAG,WAAW+B,KAAK,QAGjC,kBAACX,EAAA,EAAKG,MAAN,KACA,kBAACL,EAAA,EAAD,CAAQQ,KAAK,SAAS9B,QAAQ,eAAeU,UAAU,OAAvD,iB,GAlEkBM,IAAMC,W,gBCAvBmB,E,uKAEb,OACI,yBAAK1B,UAAU,gBACX,uCACA,2FACA,6BACA,qCACA,2gBACI,6BACJ,iRAGA,mCACA,kBAAC2B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMrC,GAAG,QACL,kBAACoC,EAAA,EAAU9B,OAAX,CAAkBH,GAAIkC,IAAKC,OAAQC,SAAS,KAA5C,yBAGA,kBAACH,EAAA,EAAU5B,SAAX,CAAoB+B,SAAS,KAC7B,kBAACF,EAAA,EAAKG,KAAN,CAAWrB,MAAO,CAACC,WAAW,UAA9B,8JAKJ,kBAACiB,EAAA,EAAD,CAAMrC,GAAG,QACL,kBAACoC,EAAA,EAAU9B,OAAX,CAAkBH,GAAIkC,IAAKC,OAAQC,SAAS,KAA5C,8CAGA,kBAACH,EAAA,EAAU5B,SAAX,CAAoB+B,SAAS,KAC7B,kBAACF,EAAA,EAAKG,KAAN,CAAWrB,MAAO,CAACC,WAAW,UAA9B,gJAKJ,kBAACiB,EAAA,EAAD,CAAMrC,GAAG,QACL,kBAACoC,EAAA,EAAU9B,OAAX,CAAkBH,GAAIkC,IAAKC,OAAQC,SAAS,KAA5C,wCAGA,kBAACH,EAAA,EAAU5B,SAAX,CAAoB+B,SAAS,KAC7B,kBAACF,EAAA,EAAKG,KAAN,CAAWrB,MAAO,CAACC,WAAW,UAA9B,sQ,GAxCWL,IAAMC,W,2CCDpByB,E,kDACjB,WAAY5C,GAAQ,IAAD,8BACnB,cAAMA,IACD6C,OAAS,EAAKA,OAAOC,KAAZ,gBAFK,E,gEAMjBC,SAASC,eAAe,aAAaC,U,6BAElCC,GACL,IAAMC,EAAMC,KAAKpD,MAAMqD,KAAKC,OAAOC,MACnC,KAAGL,EAAMM,QAAS,IAAMN,EAAMM,QAAS,IAAvC,CAQA,GAJQ,GAALL,GACDC,KAAKpD,MAAMyD,UAAU,SAGH,GAAjBP,EAAMM,QAAa,CACpB,GAAQ,GAALL,EAED,YADAC,KAAKpD,MAAM0D,SAAS,EAAE,SAGxBN,KAAKpD,MAAMyD,UAAU,gBAAgB,CAACN,EAAIC,KAAKpD,MAAMqD,KAAKC,OAAOK,IAAIP,KAAKpD,MAAMqD,KAAKC,OAAOK,IAAIC,OAAO,GAAGC,WAAWC,QAAQ,GAAGV,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOZ,EAAI,KAElKC,KAAKpD,MAAM0D,SAASR,EAAMc,IAAI,iBAG9B,CACE,KAAGb,EAAMC,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOH,QAOnC,OANAR,KAAKpD,MAAM0D,SAASR,EAAMc,IAAI,aAC3Bb,GAAOC,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOH,OAAO,GAC3CR,KAAKpD,MAAMyD,UAAU,OAUjC,GAAoB,IAAjBP,EAAMM,SAAiBJ,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOZ,IAAOc,OAAOC,aAAa,MAGjF,OAFAd,KAAKpD,MAAMyD,UAAU,QAAQ,QAC7BL,KAAKpD,MAAMyD,UAAU,MAAML,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOZ,IAAOc,OAAOC,aAAa,OAGtFd,KAAKpD,MAAMyD,UAAU,MAAML,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOZ,IAAOD,EAAMc,Q,+BAQtE,OACE,yBAAKpD,UAAU,SAASR,GAAG,YAAY+D,cAAY,YAAYC,SAAS,IAAIC,UAAWjB,KAAKP,QAC1F,2BAAIO,KAAKpD,MAAMqD,KAAKC,OAAOK,IAAIW,KAAI,SAACC,EAAQC,GAAT,OAC/BD,EAAQE,YACN,0BAAMN,cAAaK,EAAE,IAAID,EAAQG,MAAMd,OAAOW,EAAQE,YAAanD,MAAO,CAACqD,MAAM,UAAUC,YAAY,SAAUL,EAAQG,OACzH,0BAAMP,cAAaK,EAAE,IAAID,EAAQG,MAAMd,OAAOW,EAAQE,YAAanD,MAAO,CAACC,WAAY,YAAagD,EAAQV,eAClH,0BAAMzD,GAAG,WAAWgD,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOX,KAAKpD,MAAMqD,KAAKC,OAAOC,QACzE,8BAAOH,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOc,MAAMzB,KAAKpD,MAAMqD,KAAKC,OAAOC,MAAM,U,GA/D5CrC,IAAMC,W,oCCA3B,SAAS2D,EAASC,GAC7B,IAAIC,EAASD,EAAIE,IAAMC,MAAMC,KAAK,CAACvB,OAAQwB,KAAKC,MAAM,GAAIN,EAAIO,QAAQ,kBAAMF,KAAKC,MAAsB,IAAhBD,KAAKG,aAAmB,GAC3GC,EAAUC,IAAYL,KAAKC,OAAO,EAAU,GAARN,EAAIE,KAASF,EAAIO,OACrDI,EAAcC,OAAOC,QAAQb,EAAIc,OAAOC,QAAO,SAAAC,GAAC,MAAU,OAAPA,EAAE,IAAcA,EAAE,MAazE,OAXIhB,EAAIiB,MAAMR,EAAUA,EAAQlB,KAAI,SAAAyB,GAAC,OAAEA,EAAE,GAAGE,cAAeF,EAAElB,MAAM,OAChEa,EAAY9B,OAAO,IAClB4B,EAAUA,EAAQlB,KAAI,SAAAyB,GAClB,IAAIG,EAASR,EAAYN,KAAKC,MAAMD,KAAKG,SAASG,EAAY9B,SAAS,GACvE,OAAOsC,EAAO,GAAKH,EAAGG,EAAO,OAGlCnB,EAAIoB,OAAOvC,OAAO,IACjB4B,EAAUA,EAAQlB,KAAI,SAAAyB,GAAC,OAAEhB,EAAIoB,OAAOf,KAAKC,MAAMD,KAAKG,SAASR,EAAIoB,OAAOvC,SAASmC,MAG9EP,EAAQY,OAAOpB,GAAQqB,MAAK,SAACC,EAAEC,GAAH,MAAO,GAAInB,KAAKG,YAAUiB,KAAKvC,OAAOC,aAAa,OClB1F,IAAMuC,EAAgB,CAACT,KAAI,EAAMf,KAAI,EAAMK,KAAK,GAAGO,MAAM,CACjD,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,e,qBCmFEO,G,OAtFO,SAAC1G,GACnB,SAAS2G,EAAMC,EAAEC,GAAK,IAAD,EACMD,EAAEE,OAAlB1E,EADU,EACVA,KAAK2E,EADK,EACLA,QACRC,EAAM,GACV,GAAS,OAAN5E,EAAY,CACX,IAAIuB,EAAKgC,OAAOC,QAAQiB,GAGxB,OAFAlD,EAAIW,KAAI,SAAA2C,GAAK,OAAEA,EAAM,GAAKF,UAC1B/G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0BwC,MAAMF,OAAOwB,YAAYxD,MAGvDqD,EAAI5E,GAAQ2E,EACZ/G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0BwC,MAAM,2BAAIgB,GAAOG,MAE/C,OACQ,6BACI,kBAACtF,EAAA,EAAD,CAAMtB,GAAG,eACL,kBAACsB,EAAA,EAAKG,MAAN,CAAYvB,GAAIqB,KACZ,kBAACC,EAAA,EAAD,CAAKwF,GAAG,KACR,kBAAC1F,EAAA,EAAKI,MAAN,gBAEA,kBAACF,EAAA,EAAD,CAAKwF,GAAG,KACN,kBAAC1F,EAAA,EAAKK,QAAN,CACEC,KAAK,QACL0C,MAAO1E,EAAMqD,KAAKiC,KAClB+B,SAAU,SAAAT,GAAC,OAAI5G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0BiC,KAAKsB,EAAEE,OAAOpC,aAG3D,kBAAC9C,EAAA,EAAD,CAAKwF,GAAG,KACN,kBAAC1F,EAAA,EAAKK,QAAN,CAAcuF,UAAQ,EACtB5C,MAAO1E,EAAMqD,KAAKiC,SAKxB,kBAAC5D,EAAA,EAAKG,MAAN,CAAYvB,GAAIqB,KACZ,kBAACC,EAAA,EAAD,KACI,kBAACF,EAAA,EAAKQ,MAAN,CAAYF,KAAK,SAAS5B,GAAG,YAAY+B,MAAM,eAC/C4E,QAAS/G,EAAMqD,KAAK2C,IACpBqB,SAAU,SAAAT,GAAC,OAAI5G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0B2C,IAAIY,EAAEE,OAAOC,eAE1D,kBAACnF,EAAA,EAAD,KACI,kBAACF,EAAA,EAAKQ,MAAN,CAAY9B,GAAG,YAAY4B,KAAK,SAASG,MAAM,SAC/C4E,QAAS/G,EAAMqD,KAAK4B,IACpBoC,SAAU,SAAAT,GAAC,OAAI5G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0B4B,IAAI2B,EAAEE,OAAOC,gBAI9D,kBAACrF,EAAA,EAAKG,MAAN,KAEY,kBAACH,EAAA,EAAKI,MAAN,CAAYR,MAAO,CAAC,eAAe,SAAnC,kBAEA,kBAACI,EAAA,EAAKQ,MAAN,CAAY9B,GAAG,WAAWgC,KAAK,MAAMmF,QAAM,EAACpF,MAAM,aAAaH,KAAK,SACpE+E,QAAS/G,EAAMqD,KAAKwC,MAAM2B,IAC1BH,SAAU,SAAAT,GAAC,OAAID,EAAMC,EAAE5G,EAAMqD,KAAKwC,UAE1C,kBAAClE,EAAA,EAAD,KACCgE,OAAOC,QAAQ5F,EAAMqD,KAAKwC,OAC1BC,QAAO,SAAAmB,GAAK,MAAa,OAAVA,EAAM,MACrB3C,KAAI,SAAA2C,GAAK,OACN,kBAACrF,EAAA,EAAD,KACA,kBAACF,EAAA,EAAKQ,MAAN,CAAYqF,QAAM,EAACvF,KAAK,WAAWI,KAAM6E,EAAM,GAAI7G,GAAE,mBAAc6G,EAAM,IAAM9E,MAAO8E,EAAM,GAC5FF,QAASE,EAAM,GACfI,SAAU,SAAAT,GAAC,OAAID,EAAMC,EAAE5G,EAAMqD,KAAKwC,gBAO1C,kBAACnE,EAAA,EAAKG,MAAN,CAAYvB,GAAIqB,IAAK8F,UAAU,uBAC3B,kBAAC/F,EAAA,EAAKI,MAAN,CAAY4F,QAAM,EAACC,GAAI,GAAvB,sBAGA,kBAAC/F,EAAA,EAAD,CAAK+F,GAAI,GACP,kBAACjG,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO0C,MAAO1E,EAAMqD,KAAK8C,OAC5CkB,SAAU,SAAAT,GAAC,OAAI5G,EAAMkH,KAAN,2BAAelH,EAAMqD,MAArB,IAA0B8C,OAAOS,EAAEE,OAAOpC,kB,SChF7EkD,EAAe,CAAErE,MAAO,EAAGI,IAAK,GAAIkE,WAAW,EAAKC,MAAM,GAAG/D,OAAO,IACpEL,EAAW,SAACM,EAAKhC,GACrB,MAAO,CAAEA,KAAMA,EAAMgC,IAAKA,ICiCb+D,WAAmB,SAAAC,GAAK,MAAI,CAACC,OAAOD,EAAME,cACvD,SAACC,GAAD,MAAe,CACbC,UAAW,SAACC,GAAD,OAAaF,EAAS,CAACnG,KAAK,YAAYqG,QAAQA,KAC3D3E,SAAU,SAAC2E,EAAQrG,GAAT,OAAkBmG,EAASzE,EAAS2E,EAAQrG,QAH3C+F,EA3Bf,SAAgB/H,GAMZ,OACI,kBAACsI,EAAA,EAAD,CAAOC,KAAMvI,EAAMgI,MAAOQ,OAAQxI,EAAMyI,SAAUvI,QAAQ,QAC1D,kBAACoI,EAAA,EAAM7F,OAAP,CAAciG,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,CAAarH,MAAO,CAACqD,MAAM,UAA3B,mBAEF,kBAAC2D,EAAA,EAAM3F,KAAP,KACI,kBAAC,EAAD,CAAeU,KAAMrD,EAAMiI,OAAQf,KAAMlH,EAAMoI,aAEnD,kBAACE,EAAA,EAAMM,OAAP,KACE,kBAACpH,EAAA,EAAD,CAAQtB,QAAQ,OAAOoB,MAAO,CAACqD,MAAM,SAAUkE,QAAS7I,EAAMyI,UAA9D,SAGA,kBAACjH,EAAA,EAAD,CAAStB,QAAQ,UAAUoB,MAAO,CAACqD,MAAM,SACzCkE,QAlBN,WACI7I,EAAMoI,UAAU,YAAYpI,EAAMiI,QAClCjI,EAAM0D,SAASoF,EAAc9I,EAAMiI,QAAQ,WAC3CjI,EAAMyI,aAcJ,qBCrBWM,E,kDACnB,WAAY/I,GAAO,IAAD,8BAChB,cAAMA,IACDgJ,cAAgB,EAAKA,cAAclG,KAAnB,gBACrB,EAAKmG,WAAa,EAAKA,WAAWnG,KAAhB,gBAClB,EAAKoG,MAAQ,EAAKA,MAAMpG,KAAX,gBACb,EAAKqG,QAAU,EAAKA,QAAQrG,KAAb,gBACf,EAAKsG,SAAW,EAAKA,SAAStG,KAAd,gBAChB,EAAKkF,MAAQ,CAACqB,QAAO,GACjB,EAAKC,QAAU,EAAKA,QAAQxG,KAAb,gBACf,EAAK2F,SAAW,EAAKA,SAAS3F,KAAd,gBATJ,E,kDAWZI,GACJE,KAAKpD,MAAM0D,SAASoF,EAAc1F,KAAKpD,MAAMqD,KAAK6E,WAAW,SAC7DnF,SAASC,eAAe,aAAaC,U,8BAG/BC,GACNE,KAAKpD,MAAM0D,SAASoF,EAAc1F,KAAKpD,MAAMqD,KAAK6E,WAAW,WAC7DnF,SAASC,eAAe,aAAaC,U,gCAIjCG,KAAKmG,SAAS,CAACF,QAAO,M,iCAGtBjG,KAAKmG,SAAS,CAACF,QAAO,IACtBG,YAAW,kBAAKzG,SAASC,eAAe,aAAaC,UAAS,O,oCAGtDwG,EAAUC,GACtB,IAAMC,GAAQC,KAAKC,MAAMJ,GAAW,IAC9BnE,EAAOoE,EACb,OAAc,GAAXD,EACM,GAEFrE,KAAK0E,MAAM,IAAMxE,EAAKqE,GAAK,K,iCAEzBI,EAAQC,GACjB,OAAc,GAAVD,EACK,GAEF3E,KAAK0E,MAAM,IAAME,EAAQD,GAAS,IAAI,M,+BAEtCxG,EAAO0G,GACZ,OAAO7E,KAAK0E,MAAY,IAANvG,EAAW0G,K,+BAG7B,IAAMb,EAAWhG,KAAKgG,SAAShG,KAAKpD,MAAMqD,KAAKC,OAAOC,MAAMH,KAAKpD,MAAMqD,KAAKC,OAAOS,OAAOH,QAC5F,OAEE,yBAAKxD,GAAG,YACR,kBAACuB,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACA,yBAAKxB,GAAG,OACN,gDAAuBgD,KAAK4F,cAAc5F,KAAKpD,MAAMqD,KAAK6G,YAAYC,UAAU/G,KAAKpD,MAAMqD,KAAK6G,YAAYE,WAC5G,uBAAGjG,cAAY,gBAAf,eAA2Cf,KAAK6F,WAAW7F,KAAKpD,MAAMqD,KAAK6G,YAAYG,WAAWjH,KAAKpD,MAAMqD,KAAK6G,YAAYI,gBAKhI,yBAAKlK,GAAG,gBACJ,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACI,yBAAKxB,GAAG,wBACR,kBAACmK,EAAA,EAAD,CAAaV,IAAKT,EAAUlJ,QAAQ,OAAOsK,UAAQ,EAACrI,MAAK,UAAKiH,EAAL,KAAkB9H,MAAO,CAACmJ,MAAM,YAG7F,kBAAC7I,EAAA,EAAD,CAAKwF,GAAG,QACJ,kBAAC5F,EAAA,EAAD,CAAQpB,GAAG,cAAcF,QAAQ,eAAeU,UAAU,MAAOuD,cAAY,cAAc0E,QAASzF,KAAK8F,OAAzG,UAEJ,kBAACtH,EAAA,EAAD,CAAKwF,GAAG,QACJ,kBAAC5F,EAAA,EAAD,CAAQpB,GAAG,gBAAgBF,QAAQ,eAAeU,UAAU,MAAMuD,cAAY,gBAAgB0E,QAASzF,KAAK+F,SAA5G,eAEJ,kBAACvH,EAAA,EAAD,CAAKwF,GAAG,QACJ,kBAAC5F,EAAA,EAAD,CAAQpB,GAAG,gBAAgBF,QAAQ,eAAeU,UAAU,MAAMuD,cAAY,gBAAgB0E,QAASzF,KAAKkG,SAA5G,cAQR,kBAAC,EAAD,CAAQtB,MAAO5E,KAAK4E,MAAMqB,OAAQC,QAASlG,KAAKkG,QAASb,SAAUrF,KAAKqF,gB,GAnF7CvH,IAAMC,W,QCEpBuJ,E,kDACjB,WAAY1K,GAAO,IAAD,8BACd,cAAMA,IACD2K,QAAU,EAAKA,QAAQ7H,KAAb,gBACf,EAAKkF,MAAQ,CAACyC,MAAM,EAAGG,OAAO,KAC9B,EAAKC,aAAe,EAAKA,aAAa/H,KAAlB,gBAJN,E,gEAQdM,KAAKmG,SACD,CAACkB,MAAM1H,SAASC,eAAe,mBAAmB8H,YAAY,KAClEC,OAAOC,iBAAiB,SAAS5H,KAAKyH,gB,qCAItCzH,KAAKmG,SACD,CAACkB,MAAM1H,SAASC,eAAe,mBAAmB8H,YAAY,O,8BAG9DG,GAEJ,IADA,IAAIC,EAAM,GACD1G,EAAI,EAAGA,EAAEyG,EAAIrH,OAAOY,IAAI,CAC7B,IAAI2G,EAAIF,EAAIzG,GACT0G,EAAIC,GACHD,EAAIC,GAAKD,EAAIC,GAAG,EAGhBD,EAAIC,GAAK,EAMjB,OAHAD,EAAI,KAAO,GACVA,EAAMvF,OAAOC,QAAQsF,IAClB7E,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAE,GAAGD,EAAE,MAChB4E,EAAI5G,KAAI,SAAAyB,GAAC,MAAG,CAACA,EAAEA,EAAE,GAAGqF,EAAErF,EAAE,S,+BAI/B,IAAIsF,EAAMjI,KAAKuH,QAAQvH,KAAKpD,MAAMqD,MAC5BiI,EAAY,CAClBC,MAAO,CACLC,SAAU,OACVC,KAAM,SAER1K,MAAO,CACLyK,SAAU,OACVC,KAAM,UAIR,OACIJ,EAAI,GAAGD,EACP,yBAAKhL,GAAG,aAAasL,IAAI,SACrB,kBAAC,IAAD,CACIC,MAAM,UACNlB,MAAOrH,KAAK4E,MAAMyC,MAClBG,OAAQxH,KAAK4E,MAAM4C,OACnBgB,QAAS,CAAC,EAAEP,EAAI,GAAGD,GACnBS,OAAQ,CAACC,KAAM,GAAGC,IAAI,KAEtB,kBAAC,IAAD,MACI,kBAAC,IAAD,CACK1I,KAAMgI,EAAIxG,MAAM,EAAE,MACvB,kBAAC,IAAD,CAAOvD,MAAOgK,IACd,kBAAC,IAAD,CAAOhK,MAAOgK,MAGxB,kC,GAlE0BpK,IAAMC,WCPxC6K,EAAgB,CAAC7B,UAAU,EAAE8B,QAAQ,EAAE7B,SAAS,EAAEC,WAAW,EAAEC,WAAW,GCe1E4B,EAAU,CACZC,OAAO,CAACnG,KAAI,EAAMf,KAAI,EAAMK,KAAK,GAAGO,MAAM,CACtC,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,IACTiG,KAAM,CAACpG,KAAI,EAAKf,KAAI,EAAMK,KAAK,GAAGO,MAAM,CACpC,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,IACTkG,QAAQ,CAACrG,KAAI,EAAMf,KAAI,EAAKK,KAAK,GAAGO,MAAM,CACtC,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,IACTmG,SAAS,CAACtG,KAAI,EAAMf,KAAI,EAAMK,KAAK,GAAGO,MAAM,CACxC,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,IACToG,WAAW,CAACvG,KAAI,EAAMf,KAAI,EAAMK,KAAK,GAAGO,MAAM,CAC1C,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,4BACTqG,OAAO,CAACxG,KAAI,EAAKf,KAAI,EAAKK,KAAK,GAAGO,MAAM,CACpC,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,OAAM,EACN,KAAM,GACRM,OAAO,6BAIPsG,E,kDACJ,WAAYzM,GAAO,IAAD,8BACd,cAAMA,IACDgI,MAAQ,CAACqB,QAAO,GACrB,EAAKqD,UAAY,EAAKA,UAAU5J,KAAf,gBACjB9C,EAAM0D,SAASoF,EAAcoD,EAAQlM,EAAM2M,MAAMC,OAAOC,SAAS,WACjE7M,EAAMkI,UAAU,YAAYgE,EAAQlM,EAAM2M,MAAMC,OAAOC,SACvD,EAAKC,aAAe,EAAKA,aAAahK,KAAlB,gBACpB0G,YAAW,kBAAKzG,SAASC,eAAe,aAAaC,UAAS,GAPhD,E,+DAUC8J,GACZA,EAAUJ,MAAMC,QAAUxJ,KAAKpD,MAAM2M,MAAMC,SAC5CxJ,KAAKpD,MAAM0D,SAASoF,EAAcoD,EAAQ9I,KAAKpD,MAAM2M,MAAMC,OAAOC,SAAS,WAC3EzJ,KAAKpD,MAAMkI,UAAU,YAAYgE,EAAQ9I,KAAKpD,MAAM2M,MAAMC,OAAOC,SAC9D9J,SAASC,eAAe,cACvBwG,YAAW,kBAAKzG,SAASC,eAAe,aAAaC,UAAS,M,kCAOpEG,KAAKmG,SAAS,CAACF,QAAQjG,KAAK4E,MAAMqB,W,mCAEzB8B,GACH,cAAHA,GACD3B,YAAW,kBAAKzG,SAASC,eAAe,aAAaC,UAAS,K,+BAIlE,OACE,yBAAK7C,GAAG,kBAAkBQ,UAAU,gBAClC,wBAAIR,GAAG,SAAP,yBACA,kBAAC,EAAD,CAAOsM,UAAatJ,KAAKsJ,UAAWM,IAAO5J,KAAK4E,MAAMqB,OAAQhG,KAAMD,KAAKpD,MAAMqD,KAAMK,SAAUN,KAAKpD,MAAM0D,SAAUD,UAAWL,KAAKpD,MAAMyD,YAC1I,6BACA,yBAAKrD,GAAG,aACJ,kBAAC6M,EAAA,EAAD,CAAMrM,UAAU,WAAWsM,SAAY9J,KAAK0J,cACxC,kBAACK,EAAA,EAAD,CAAKzK,SAAS,aAAa3B,MAAM,eAC7B,kBAAC,EAAD,CAAQ2C,SAAUN,KAAKpD,MAAM0D,SAAUD,UAAWL,KAAKpD,MAAMyD,UAAWJ,KAAMD,KAAKpD,MAAMqD,QAE7F,kBAAC8J,EAAA,EAAD,CAAKzK,SAAS,WAAW3B,MAAM,cAC3B,kBAAC,EAAD,CAAYsC,KAAMD,KAAKpD,MAAMqD,KAAKC,OAAOwE,gB,GA1C3C5G,IAAMC,WAqDT4G,OACb,SAACC,GAAD,MAAY,CAAE3E,KAAM2E,MACpB,SAACG,GAAD,MAAe,CACbzE,SAAU,SAAC2E,EAAQrG,GAAT,OAAkBmG,EAASzE,EAAS2E,EAAQrG,KACtDyB,UAAU,SAACzB,EAAKqG,GAAN,OAAiBF,EDhIb,SAACnG,GAAmB,IAAdqG,EAAa,uDAAL,EAC9B,MAAO,CAACrG,KAAMA,EAAKqG,QAAQA,GC+HW5E,CAAUzB,EAAKqG,KACnDH,UAAW,SAAClG,EAAKqG,GAAN,OAAkBF,EAAS,CAACnG,KAAKA,EAAKqG,QAAQA,QAL9CN,CAOb0E,G,gBCpHF,SAASW,IACD,OACI,yBAAKhN,GAAG,gBACR,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAACiN,EAAA,EAAD,CAAWjN,GAAG,WACV,kBAAC,IAAD,CAAOkN,KAAM,IAAIC,UAAWnM,EAAcoM,OAAK,IAC/C,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAajL,IAClC,kBAAC,IAAD,CAAOgL,KAAK,YAAYC,UAAY9L,IACpC,kBAAC,IAAD,CAAO6L,KAAK,qBAAqBC,UAAYd,OAOjE,IAAMgB,GAAiBC,IAAsB,CAACpK,ON7B/B,WAAgC,IACzCO,EAAYmG,EAAS2D,EAAYC,EADvBvK,EAA8B,uDAAvBuE,EAAa1E,EAAU,uCAE5C,OAAQA,EAAMlB,MACZ,IAAK,YAGH,GADC6B,GADAmG,EAAU3G,EAAKU,OAAOV,EAAKE,QAAUL,EAAMc,KAAQX,EAAKU,OAAOV,EAAKE,QAAUU,OAAOC,aAAa,OAAwB,KAAbhB,EAAMc,KAC7F,GAAIX,EAAKU,OAAOV,EAAKE,OACvB,GAAjBF,EAAKM,IAAIC,OACX,OAAO+B,OAAOkI,OAAO,GAAIxK,EAAM,CAC3BwE,UAAWmC,EACXzG,MAAOF,EAAKE,MAAM,EAClBI,IAAK,CAAC,CAAEc,YAAauF,EAAStF,MAAOrB,EAAKU,OAAOV,EAAKE,OAAOM,WAAWA,IACxEiE,MAAOzE,EAAKyE,MAAMjE,IAIxB,GAAGmG,GAAW3G,EAAKwE,UACjB,OAAOlC,OAAOkI,OAAO,GAAIxK,EAAM,CAC3BwE,UAAWmC,EACXzG,MAAOF,EAAKE,MAAM,EAClBI,IAAI,GAAD,mBAAMN,EAAKM,KAAX,CAAgB,CAAEc,YAAauF,EAAStF,MAAOrB,EAAKU,OAAOV,EAAKE,OAAOM,WAAWA,KACrFiE,MAAOzE,EAAKyE,MAAMjE,IAjB1B,MAqB+B,CACvBR,EAAKM,IAAIkB,MAAM,GAAI,GACnBxB,EAAKM,IAAIN,EAAKM,IAAIC,OAAO,IAI3B,OANF+J,EArBJ,MAqBgBC,EArBhB,MAyBclJ,OAASrB,EAAKU,OAAOV,EAAKE,OACtCqK,EAAY/J,YAAcA,EACf8B,OAAOkI,OAAO,GAAIxK,EAAM,CAC7BE,MAAOF,EAAKE,MAAM,EAClBI,IAAKgK,EAAWvH,OAAOwH,GACvB9F,MAAOzE,EAAKyE,MAAMjE,IAG1B,IAAK,YACH,OAAGR,EAAKE,MAAM,EACLoC,OAAOkI,OAAO,GAAGxK,EAAK,CAAEE,MAAO,EAAGI,IAAK,GAAIkE,WAAW,EAAKC,MAAM,MAExE6F,EAAatK,EAAKM,IAAIkB,MAAM,GAAI,IAChC+I,EAAcvK,EAAKM,IAAIN,EAAKM,IAAIC,OAAO,IAE1Bc,MAAMd,OAAO,GAC1BgK,EAAYlJ,MAAQkJ,EAAYlJ,MAAMG,MAAM,GAAG,GAC/C+I,EAAY/J,WAAa+J,EAAY/J,WAAWgB,MAAM,GAAG,GAClDc,OAAOkI,OAAO,GAAIxK,EAAM,CAC3BE,MAAOF,EAAKE,MAAM,EAClBI,IAAKgK,EAAWvH,OAAOwH,MAGtBjI,OAAOkI,OAAO,GAAGxK,EAChB,CAACE,MAAMF,EAAKE,MAAM,EACjBI,IAAIN,EAAKM,IAAIkB,MAAM,GAAG,GACtBgD,UAAUxE,EAAKM,IAAIN,EAAKM,IAAIC,OAAO,GAAGa,eAGjD,IAAK,QACH,OAAOkB,OAAOkI,OAAO,GAAGxK,EAAK,CAAEE,MAAO,EAAGI,IAAK,GAAIkE,WAAW,EAAKC,MAAM,KAC1E,IAAK,UACH,OAAOnC,OAAOkI,OAAO,GAAGxK,EAAK,CAACE,MAAO,EAAGI,IAAK,GAAIkE,WAAW,EAAK9D,OAAOb,EAAMc,MAChF,QACE,OAAO2B,OAAOkI,OAAO,GAAGxK,KMjCuB6G,YF3BlC,WAA8B,IAA7B7G,EAA4B,uDAAvB2I,EAAc9I,EAAS,uCAE9C,OAAOA,EAAMlB,MACX,IAAK,QACH,OAAO2D,OAAOkI,OAAO,GAAGxK,EAAK,CAAC8G,UAAUP,KAAKC,QAC/C,IAAK,MACH,OAAOlE,OAAOkI,OAAO,GAAGxK,EAAK,CAAC4I,QAAQrC,KAAKC,QAC7C,IAAK,MACH,OAAOlE,OAAOkI,OAAO,GAAGxK,EAAK,CAACgH,WAAWhH,EAAKgH,WAAW,EAAEC,WAAWjH,EAAKiH,YAAYpH,EAAMmF,UAC/F,IAAK,QACH,OAAO1C,OAAOkI,OAAO,GAAGxK,EAAK,CAAC+G,SAAS/G,EAAK+G,UAAUlH,EAAMmF,QAAQiC,WAAWjH,EAAKiH,YAAYpH,EAAMmF,QAAQgC,WAAWhH,EAAKgH,YAAY,IAC5I,IAAK,gBACH,OAAO1E,OAAOkI,OAAO,GAAGxK,EAAK,CAC3BiH,WAAWjH,EAAKiH,YAA8B,IAAlBpH,EAAMmF,QAAQ,GAC1C+B,SAAS/G,EAAK+G,UAA4B,IAAlBlH,EAAMmF,QAAQ,IAA8B,KAApBnF,EAAMmF,QAAQ,GAC5DgC,WAAWhH,EAAKgH,WAAW,IAEjC,IAAK,QACD,OAAO1E,OAAOkI,OAAO,GAAG7B,GAC5B,IAAK,UACD,OAAOrG,OAAOkI,OAAO,GAAGxK,EAAK,CAAC8G,UAAU,EAAE8B,QAAQ,EAAE7B,SAAS,IACjE,QACE,OAAO/G,IEKoD6E,URvBlD,WAA+C,IAA5BF,EAA2B,uDAArBvB,EAAcqH,EAAO,uCACzD,OAAOA,EAAO9L,MACV,IAAK,YACD,OAAO2D,OAAOkI,OAAO,GAAG7F,EAAM8F,EAAOzF,SACzC,QAAS,OAAOL,MQoBlB+F,GAAQL,IAAkBD,IAEjB,qBACX,kBAAC,IAAD,CAAUM,MAAOA,IACf,kBAACX,EAAD,QC1BcY,QACW,cAA7BjD,OAAOkD,SAASC,UAEe,UAA7BnD,OAAOkD,SAASC,UAEhBnD,OAAOkD,SAASC,SAASvB,MACvB,2D,cCTNwB,IAASC,OACL,kBAAC,IAAD,CAAeC,SAAUpN,UACzB,kBAAC,GAAD,OAEE8B,SAASC,eAAe,SDsHxB,kBAAmBsL,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9G,GACL+G,QAAQ/G,MAAMA,EAAMgH,c","file":"static/js/main.186a75b0.chunk.js","sourcesContent":["import React,{setState} from 'react'\nimport { Navbar,Nav,NavDropdown} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nexport default class MyNavbar extends React.Component{\n    constructor(props){\n        super(props)\n        \n    }\n    \n    render(){\n        return(\n            <div>\n               <Navbar variant='dark' bg='none'  id='navbar'>\n                <Navbar.Brand as={Link} to='/'>type.io</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className ='justify-content-end' >\n                <Nav>\n                    <NavDropdown variant='dark' title=\"Lesson\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL + \"/practice/basics\"}>Lesson 1 - The Basics</NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL +\"/practice/caps\"}>Lesson 2 - The Uppercase</NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL +\"/practice/numbers\"}>Lesson 3 - The Numbers</NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL +\"/practice/brackets\"}>Lesson 4 - The Brackets</NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL +\"/practice/characters\"}>Lesson 5 - The Characters</NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={process.env.PUBLIC_URL +\"/practice/master\"}>Lesson 6 - The Master</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link as={Link} to={process.env.PUBLIC_URL +'/feedback'}>Feedback</Nav.Link>\n                    <Nav.Link as={Link} to={process.env.PUBLIC_URL +'/about'}>About</Nav.Link>\n                    \n                </Nav>\n                </Navbar.Collapse>\n               </Navbar>\n            </div>\n           \n        )\n    }\n}\n\n","import React from 'react'\nimport {Jumbotron,Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\n\nexport default class Introduction extends React.Component{\n    render(){\n        return(\n            <Jumbotron style={{background:'transparent'}}>\n            <h1  >Touch Typing</h1>\n            <p >Want to get better at typing so you dont suck like me? Start practicing today!</p>\n            <Button as={Link} to= {process.env.PUBLIC_URL +'/practice/basics'} variant='outline-dark' className='btn'>Start Typing </Button>\n            </Jumbotron>\n            \n            )\n    }\n}","import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport {Button,Col} from 'react-bootstrap'\nexport default class Feedback extends React.Component{\n    render(){\n        return (\n            <div className='contentstuff'>\n                <h1>Feedback</h1>\n                <p>Thank you for your feedback. We will improve it ASAP to provide a better experience</p>\n                <Form>\n                    <Form.Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>First Name </Form.Label>\n                                <Form.Control type='text' ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Last Name </Form.Label>\n                                <Form.Control type='text' ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                         <Col>\n                            <Form.Group>\n                                <Form.Label>User Name @</Form.Label>\n                                <Form.Control type='text' ></Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                            <Form.Group>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type='email' ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                    \n                    <Form.Group>\n                    <Form.Label style={{display:'block'}}>Which Area Can We Improve</Form.Label>\n                        <Form.Row>\n                            <Col> <Form.Check  label='Text Selection' type='checkbox' /></Col>\n                            <Col> <Form.Check  label='Presentation' type='checkbox' /></Col>\n                            <Col> <Form.Check  label='Statistics' type='checkbox' /></Col>\n                            \n                        </Form.Row>\n                   \n                \n                    </Form.Group>\n                    \n                    \n                    <Form.Group>\n                    <Form.Label style={{display:'block'}}>How Would You Rate This App</Form.Label>\n                        <Form.Row>\n                            <Col> <Form.Check name='radio' label='1' type='radio' /></Col>\n                            <Col> <Form.Check name='radio' label='2' type='radio' /></Col>\n                            <Col> <Form.Check name='radio' label='3' type='radio' /></Col>\n                            <Col> <Form.Check name='radio' label='4' type='radio' /></Col>\n                            <Col> <Form.Check name='radio' label='5' type='radio' /></Col>\n                        </Form.Row>\n                   \n                \n                    </Form.Group>\n                    \n                    <Form.Group>\n                    <Form.Label style={{display:'block'}}>Please Provide Feedback</Form.Label>\n                    <Form.Control as='textarea' rows='10' />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                    <Button type='submit' variant='outline-dark' className='btn' >Submit</Button>\n                    </Form.Group>\n                </Form>\n            </div>\n            \n            )\n    }\n}","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nexport default class About extends React.Component{\n    render(){\n        return(\n            <div className='contentstuff'>\n                <h1>Mission</h1>\n                <p>To create a tool for everyone to practice their touch typing</p>\n                <hr/>\n                <h1>About</h1>\n                <p> When I first started programming, I realized the hardest part is not the technical parts, but rather the ability to type. Improper makes coding extermely difficult, and it takes away all the flow when your typing ability cannot keep up with your thinking ability. Typos in the code also makes debugging much more difficult, when the errors are often resulting in the smallest mistakes that are crucial to the interpreter, such as using a bracket instead of a curly bracket, or case mistakes.\n                </p><br/>\n                <p>\n                    I realizdd that typing is the basic skill that everyone should have to become a productive member of the society in the 21st century. Thus, I decided to create this app to help others practicing touch typing and find their flow in their work.\n                </p>\n                <h1>Q&A</h1>\n                <Accordion>\n                    <Card bg='dark'>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                            Do I need an Account?\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\" >\n                        <Card.Body style={{background:'black'}}>\n                            NO! You can start typing without an account. However, creating an account allows you to track your past statistics and track the progress you have made.\n                        </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card bg='dark'>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Do I need to know the basic typing skills?\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\" >\n                        <Card.Body style={{background:'black'}}>\n                            NO! The lessons are designed for absolute beginners. Start typing right away and expect your speed and accuracy to improve as you practice\n                        </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card bg='dark'>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                            How fast should I expect improvement\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"2\" >\n                        <Card.Body style={{background:'black'}}>\n                            The great thing about typing is you will notice your skill improving everyday. You will notice you are more familiar with certain keys and as each keys become automatic, your overall typing ability will enhence as you are more familiar with the keys.\n                        </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </div>\n            \n            )\n    }\n}","import React from 'react';\n\nexport default class Render extends React.Component {\n    constructor(props) {\n    super(props);\n    this.hitKey = this.hitKey.bind(this);\n    \n  }\n  componentDidMount(){\n      document.getElementById('promptBox').focus()\n  }\n  hitKey(event) {\n    const ind = this.props.data.update.index\n    if(event.keyCode >15 && event.keyCode <20){\n      return\n    }\n    \n    if(ind==0){\n      this.props.enterStat('start')\n    }\n    \n    if(event.keyCode == 8){\n      if(ind==0){\n        this.props.enterKey(0,'reset')\n        return\n      }\n      this.props.enterStat('backtrackstat',[ind,this.props.data.update.arr[this.props.data.update.arr.length-1].correction.substr(-1),this.props.data.update.prompt[ind-1]])\n      \n      this.props.enterKey(event.key,\"backtrack\")\n    }\n    else\n      {\n        if(ind < this.props.data.update.prompt.length){\n            this.props.enterKey(event.key,\"enter key\")\n            if(ind == this.props.data.update.prompt.length-1){\n                this.props.enterStat('end')\n            }\n        }\n        else{\n            return\n        }\n        \n      }\n    \n    \n    if(event.keyCode == 32 && this.props.data.update.prompt[ind]== String.fromCharCode(0x2423)){\n      this.props.enterStat(\"space\",1)\n      this.props.enterStat(\"key\",this.props.data.update.prompt[ind]== String.fromCharCode(0x2423))\n      return\n    }\n    this.props.enterStat(\"key\",this.props.data.update.prompt[ind]== event.key)\n        \n    \n    \n  }\n  \n  render() {\n    \n    return (\n      <div className=\"textIO\" id=\"promptBox\" data-testid='promptbox' tabIndex=\"0\" onKeyDown={this.hitKey}>\n        <p>{this.props.data.update.arr.map((element,i)=>\n            element.correctness ?\n              <span data-testid={i+'-'+element.value.length+element.correctness} style={{color:\"#55a356\",fontWeights:\"bold\"}}>{element.value}</span> :\n              <span data-testid={i+'-'+element.value.length+element.correctness} style={{background: \"#a35555\"}}>{element.correction}</span> )}\n        <span id='pointer'>{this.props.data.update.prompt[this.props.data.update.index]}</span>\n        <span>{this.props.data.update.prompt.slice(this.props.data.update.index+1)}</span>\n        </p>\n      </div>\n    );\n  }\n}","import randomWords from 'random-words'\n\nexport default function generate(obj){\n    let numArr = obj.num ? Array.from({length: Math.floor(0.3*obj.word)}, () => Math.floor(Math.random() * 100)) : []\n    let wordArr = randomWords(Math.floor((1-obj.num*0.3)*obj.word))\n    let surroundArr = Object.entries(obj.paran).filter(x=> x[0]!= 'all' && x[1])\n    \n    if (obj.cap){ wordArr = wordArr.map(x=>x[0].toUpperCase()+ x.slice(1))}\n    if(surroundArr.length>0){\n        wordArr = wordArr.map(x=>{\n            let around = surroundArr[Math.floor(Math.random()*surroundArr.length)][0]\n            return around[0] + x +around[2]\n        })\n    }\n    if(obj.spChar.length>0){\n        wordArr = wordArr.map(x=>obj.spChar[Math.floor(Math.random()*obj.spChar.length)]+x)\n    }\n    \n    return wordArr.concat(numArr).sort((a,b)=>0.5-Math.random()).join(String.fromCharCode(0x2423))\n}","const default_state = {cap:false,num:false,word:10,paran:{\n        '< >':false,\n        '{ }':false,\n        '[ ]':false,\n        '\" \"':false,\n        \"' '\":false,\n        '( )':false,\n        'all':false\n    },spChar:'#$_+=/?;:,.'}\n    \nexport default function setPrompt(state=default_state,action){\n    switch(action.type){\n        case 'setPrompt':\n            return Object.assign({},state,action.payload)\n        default: return state\n    }\n}","import React from 'react'\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport {Form,Button,Row,Col} from 'react-bootstrap'\n\n\nconst PromptSetting = (props)=>{\n    function check(e,dic){\n        const {name,checked} = e.target\n        let ret = {}\n        if(name=='all'){\n            let arr =Object.entries(dic)\n            arr.map(items=>items[1] = checked)\n            props.func({...props.data,paran:Object.fromEntries(arr)})\n            return\n        }\n        ret[name] = checked\n        props.func({...props.data,paran:{...dic,...ret}})\n    }\n    return(\n            <div>\n                <Form id='settingForm'>\n                    <Form.Group as={Row} >\n                        <Col xs='2'>\n                        <Form.Label>Length</Form.Label>\n                        </Col>\n                        <Col xs=\"7\">\n                          <Form.Control\n                            type='range'\n                            value={props.data.word}\n                            onChange={e => props.func({...props.data,word:e.target.value})}\n                          />\n                        </Col>\n                        <Col xs=\"3\">\n                          <Form.Control disabled\n                          value={props.data.word}\n                          />\n                          \n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col>\n                            <Form.Check type='switch' id='capswitch' label='Captial Word'\n                            checked={props.data.cap}\n                            onChange={e => props.func({...props.data,cap:e.target.checked})}/>\n                        </Col>\n                        <Col>\n                            <Form.Check id='numswitch' type='switch' label='Number'\n                            checked={props.data.num}\n                            onChange={e => props.func({...props.data,num:e.target.checked})}/>\n                        </Col>\n                    </Form.Group>\n                    \n                    <Form.Group>\n\n                                <Form.Label style={{'margin-right':'15px'}}>Paranthesis   </Form.Label>\n                \n                                <Form.Check id='paranAll' name='all' inline label='Select All' type='switch'\n                                checked={props.data.paran.all}\n                                onChange={e => check(e,props.data.paran)}/>\n                           \n                        <Row>\n                        {Object.entries(props.data.paran)\n                        .filter(items=> items[0]!='all')\n                        .map(items=>(\n                            <Col>\n                            <Form.Check inline type='checkbox' name={items[0]} id={`checkbox-${items[0]}`} label={items[0]}\n                            checked={items[1]}\n                            onChange={e => check(e,props.data.paran)} />\n                            </Col>\n                        )\n                               \n                        )}\n                        </Row>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={3}>\n                          Special Characters\n                        </Form.Label>\n                        <Col sm={9}>\n                          <Form.Control type=\"text\" value={props.data.spChar}\n                          onChange={e => props.func({...props.data,spChar:e.target.value})}\n                          />\n                        </Col>\n                      </Form.Group>\n\n                    \n                </Form>\n            </div>\n        )\n        \n}\nexport default PromptSetting\n\n","const default_data = { index: 0, arr: [], last_char: true,error:'',prompt:''}\nconst enterKey = (key, type) =>{\n  return { type: type, key: key };\n};\nconst update = (data = default_data,event) => {\n  let correction, correct, allButLast, lastElement,value;\n  switch (event.type) {\n    case \"enter key\":\n       correct = data.prompt[data.index] == event.key || (data.prompt[data.index] == String.fromCharCode(0x2423) && event.key == ' ')\n       correction = correct? '': data.prompt[data.index];\n      if (data.arr.length==0){\n        return Object.assign({}, data, {\n            last_char: correct,\n            index: data.index+1,\n            arr: [{ correctness: correct, value: data.prompt[data.index],correction:correction }],\n            error: data.error+correction\n          });\n      }\n      \n      if(correct != data.last_char){\n        return Object.assign({}, data, {\n            last_char: correct,\n            index: data.index+1,\n            arr: [...data.arr, { correctness: correct, value: data.prompt[data.index],correction:correction }],\n            error: data.error+correction\n          });\n      }\n\n       [allButLast, lastElement] = [\n            data.arr.slice(0, -1),\n            data.arr[data.arr.length-1]\n          ];\n      lastElement.value += data.prompt[data.index];\n      lastElement.correction += correction;\n          return Object.assign({}, data, {\n            index: data.index+1,\n            arr: allButLast.concat(lastElement),\n            error: data.error+correction\n          });\n      \n    case \"backtrack\":\n      if(data.index<2){\n        return Object.assign({},data,{ index: 0, arr: [], last_char: true,error:''})\n      }\n        allButLast = data.arr.slice(0, -1)\n        lastElement = data.arr[data.arr.length-1]\n       \n      if(lastElement.value.length>1){\n        lastElement.value = lastElement.value.slice(0,-1)\n        lastElement.correction = lastElement.correction.slice(0,-1)\n        return Object.assign({}, data, {\n            index: data.index-1,\n            arr: allButLast.concat(lastElement)\n          });\n      }\n      return Object.assign({},data,\n              {index:data.index-1,\n               arr:data.arr.slice(0,-1),\n               last_char:data.arr[data.arr.length-2].correctness\n               }\n              )\n    case 'reset':\n      return Object.assign({},data,{ index: 0, arr: [], last_char: true,error:''})\n    case 'refresh':\n      return Object.assign({},data,{index: 0, arr: [], last_char: true,prompt:event.key})\n    default:\n      return Object.assign({},data)\n  }\n};\n\nexport {enterKey, update};","import React,{useState,setState} from 'react'\nimport * as ReactRedux from 'react-redux'\nimport setPrompt from '../app/setPrompt.js'\n\nimport {Form,Modal,Button} from 'react-bootstrap'\nimport PromptSetting from './PromptSetting.js'\nimport textGenerator from '../app/textGenerator.js'\nimport {enterKey, update} from '../app/enterKey.js'\nfunction Custom(props){\n    function handleClick(){\n        props.setConfig('setPrompt',props.config)\n        props.enterKey(textGenerator(props.config),'refresh')\n        props.setClose()\n    }\n    return (\n        <Modal show={props.state} onHide={props.setClose} variant='dark'>\n        <Modal.Header closeButton>\n          <Modal.Title style={{color:\"black\"}}>Practice Setup</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <PromptSetting data={props.config} func={props.setConfig} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"dark\" style={{color:\"white\"}} onClick={props.setClose}>\n            Close\n          </Button>\n          <Button  variant=\"primary\" style={{color:\"white\"}}\n          onClick={handleClick}>\n            Save Setting\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n}\n\nexport default ReactRedux.connect(state=> ({config:state.setPrompt}),\n  (dispatch) => ({\n    setConfig: (payload) => dispatch({type:'setPrompt',payload:payload}),\n    enterKey: (payload,type) => dispatch(enterKey(payload,type))\n    \n  })\n)(Custom);\n","import React from 'react';\nimport {Button, ProgressBar,Row,Col} from 'react-bootstrap'\nimport textGenerator from './textGenerator.js'\nimport Custom from '../homepage/Custom.js'\n\nexport default class Stats extends React.Component{\n  constructor(props){\n    super(props)\n    this.wordPerMinute = this.wordPerMinute.bind(this)\n    this.efficiency = this.efficiency.bind(this)\n    this.reset = this.reset.bind(this)\n    this.refresh = this.refresh.bind(this)\n    this.progress = this.progress.bind(this)\n    this.state = {toggle:false}\n        this.setShow = this.setShow.bind(this)\n        this.setClose = this.setClose.bind(this)\n  }\n  reset(event){\n    this.props.enterKey(textGenerator(this.props.data.setPrompt),'reset')\n    document.getElementById('promptBox').focus()\n\n  }\n  refresh(event){\n    this.props.enterKey(textGenerator(this.props.data.setPrompt),'refresh')\n    document.getElementById('promptBox').focus()\n\n  }\n  setShow(){\n        this.setState({toggle:true})\n    }\n    setClose(){\n        this.setState({toggle:false})\n        setTimeout(()=> document.getElementById('promptBox').focus(), 300)\n\n    }\n  wordPerMinute(timestart,words){\n    const sec = ((Date.now()-timestart)/1000)\n    const word = words\n    if(timestart==0){\n      return ''\n    }\n    return Math.round(60*10*word/sec)/10\n  }\n  efficiency(counter,correct){\n    if (counter ==0){\n      return ''\n    }\n    return Math.round(10000*correct/counter)/100+'%'\n  }\n  progress(index, len){\n      return Math.round(index*100/(len))\n  }\n  render(){\n      const progress = this.progress(this.props.data.update.index,this.props.data.update.prompt.length)\n    return(\n    \n      <div id='statsbox'>\n      <Row>\n      <Col>\n      <div id='kpi'>\n        <p >Words Per Minute: {this.wordPerMinute(this.props.data.statUpdater.timeStart,this.props.data.statUpdater.numSpace)}</p>\n        <p data-testid='efficiencyid'>Efficiency: {this.efficiency(this.props.data.statUpdater.keyCounter,this.props.data.statUpdater.correctKey)}</p>\n        </div>\n      </Col>\n      </Row>\n      \n      <div id='graphic area'>\n          <Row>\n            <Col>\n                <div id='progressbarcontainer' >\n                <ProgressBar now={progress} variant='dark' animated label={`${progress}%`} style={{width:'100%'}}/>\n                </div>\n            </Col>\n            <Col xs='auto'>\n                <Button id='resetButton' variant='outline-dark' className='btn'  data-testid='resetButton' onClick={this.reset}>Reset</Button>\n             </Col>\n            <Col xs='auto'>\n                <Button id='refreshButton' variant='outline-dark' className='btn' data-testid='refreshButton' onClick={this.refresh}>New Prompt</Button>\n            </Col>\n            <Col xs='auto'>\n                <Button id='settingButton' variant='outline-dark' className='btn' data-testid='settingButton' onClick={this.setShow}>Setting</Button>\n            </Col>\n            \n          </Row>\n        \n           \n        </div>\n\n        <Custom state={this.state.toggle} setShow={this.setShow} setClose={this.setClose} />\n       \n      </div>\n    )\n  }\n}","import React from 'react'\nimport {\n    XYPlot,\n    VerticalBarSeries,\n     XAxis, YAxis, HorizontalGridLines,ChartLabel\n} from 'react-vis';\n\nexport default class KeySummary extends React.Component{\n    constructor(props){\n        super(props)\n        this.summary = this.summary.bind(this)\n        this.state = {width:0, height:330}\n        this.handleResize = this.handleResize.bind(this)\n    }\n    \n    componentDidMount() {\n        this.setState(\n            {width:document.getElementById('lessonContainer').clientWidth-20});\n        window.addEventListener('resize',this.handleResize)\n    }\n    \n    handleResize(){\n        this.setState(\n            {width:document.getElementById('lessonContainer').clientWidth-20})\n    }\n    \n    summary(str){\n        let dir = {}\n        for(let  i = 0; i<str.length;i++){\n            let k = str[i]\n            if(dir[k]){\n                dir[k] = dir[k]+1\n            }\n            else{\n                dir[k] = 1\n            }\n        }\n        dir[' '] = 0\n         dir = Object.entries(dir)\n        dir.sort((a,b)=>b[1]-a[1])\n        return dir.map(x=>({x:x[0],y:x[1]}))\n    }\n    \n    render(){\n        let dat = this.summary(this.props.data)\n        const axisStyle = {\n        ticks: {\n          fontSize: '14px',\n          fill: 'white'\n        },\n        title: {\n          fontSize: '16px',\n          fill: 'white'\n        }\n      };\n        \n        return(\n            dat[0].y ?\n            <div id='KeySummary' ref='child' >\n                <XYPlot\n                    xType='ordinal'\n                    width={this.state.width}\n                    height={this.state.height}\n                    yDomain={[0,dat[0].y ]}\n                    margin={{left: 40,top:40}}\n                    >\n                    <HorizontalGridLines />\n                        <VerticalBarSeries\n                             data={dat.slice(0,10)}/>\n                        <XAxis style={axisStyle}/>\n                        <YAxis style={axisStyle} />\n                </XYPlot>\n            </div>\n            : <div></div>\n        )\n    }\n}","const stats_default = {timeStart:0,timeEnd:0,numSpace:0,keyCounter:0,correctKey:0}\n\nconst enterStat = (type,payload=0) =>{\n  return {type: type,payload:payload}\n}\n\nconst statUpdater= (data=stats_default,event) =>{\n  let timeStart, timeEnd,numSpace, keyCounter\n  switch(event.type){\n    case 'start':\n      return Object.assign({},data,{timeStart:Date.now()})\n    case 'end':\n      return Object.assign({},data,{timeEnd:Date.now()})\n    case 'key':\n      return Object.assign({},data,{keyCounter:data.keyCounter+1,correctKey:data.correctKey+=event.payload})\n    case 'space':\n      return Object.assign({},data,{numSpace:data.numSpace+=event.payload,correctKey:data.correctKey+=event.payload,keyCounter:data.keyCounter+=1})\n    case 'backtrackstat':\n      return Object.assign({},data,{\n        correctKey:data.correctKey-=event.payload[1]=='',\n        numSpace:data.numSpace-=event.payload[1]=='' && event.payload[2] == ' ',\n          keyCounter:data.keyCounter+1\n      })\n    case 'reset':\n        return Object.assign({},stats_default)\n    case 'refresh':\n        return Object.assign({},data,{timeStart:0,timeEnd:0,numSpace:0})\n    default:\n      return data;\n  }\n}\n\nexport {enterStat, statUpdater}","import React,{useState,setState} from 'react';\nimport * as ReactRedux from 'react-redux'\nimport * as ReduxThunk from 'redux-thunk'\nimport {Row, Col, Tab,Tabs} from 'react-bootstrap'\n\n\nimport Render from './Render.js'\nimport Stats from './Stats.js'\nimport KeySummary from './KeySummary.js'\n\nimport textGenerator from './textGenerator.js'\n\nimport {enterKey, update} from '../app/enterKey.js'\nimport {enterStat, statUpdater} from '../app/statUpdater.js'\nimport setPrompt from '../app/setPrompt.js'\nconst lessons = {\n    basics:{cap:false,num:false,word:20,paran:{\n        '< >':false,\n        '{ }':false,\n        '[ ]':false,\n        '\" \"':false,\n        \"' '\":false,\n        '( )':false,\n        'all':false\n    },spChar:''},\n    caps: {cap:true,num:false,word:20,paran:{\n        '< >':false,\n        '{ }':false,\n        '[ ]':false,\n        '\" \"':false,\n        \"' '\":false,\n        '( )':false,\n        'all':false\n    },spChar:''},\n    numbers:{cap:false,num:true,word:20,paran:{\n        '< >':false,\n        '{ }':false,\n        '[ ]':false,\n        '\" \"':false,\n        \"' '\":false,\n        '( )':false,\n        'all':false\n    },spChar:''},\n    brackets:{cap:false,num:false,word:20,paran:{\n        '< >':true,\n        '{ }':true,\n        '[ ]':true,\n        '\" \"':true,\n        \"' '\":true,\n        '( )':true,\n        'all':true\n    },spChar:''},\n    characters:{cap:false,num:false,word:20,paran:{\n        '< >':false,\n        '{ }':false,\n        '[ ]':false,\n        '\" \"':false,\n        \"' '\":false,\n        '( )':false,\n        'all':false\n    },spChar:'~`!@%^&*-_|\\\\#$_+=/?;:,.'},\n    master:{cap:true,num:true,word:20,paran:{\n        '< >':true,\n        '{ }':true,\n        '[ ]':true,\n        '\" \"':true,\n        \"' '\":true,\n        '( )':true,\n        'all':true\n    },spChar:'~`!@%^&*-_|\\\\#$_+=/?;:,.'}\n    \n}\n    \nclass App extends React.Component {\n  constructor(props){\n      super(props)\n      this.state = {toggle:true}\n      this.setToggle = this.setToggle.bind(this)\n      props.enterKey(textGenerator(lessons[props.match.params.lesson]),'refresh')\n      props.setPrompt('setPrompt',lessons[props.match.params.lesson])\n      this.handleSelect = this.handleSelect.bind(this)\n      setTimeout(()=> document.getElementById('promptBox').focus(), 0)\n      \n  }\n  componentDidUpdate(prevProps){\n      if(prevProps.match.params != this.props.match.params){\n        this.props.enterKey(textGenerator(lessons[this.props.match.params.lesson]),'refresh')\n        this.props.setPrompt('setPrompt',lessons[this.props.match.params.lesson])\n        if(document.getElementById('promptBox')){\n            setTimeout(()=> document.getElementById('promptBox').focus(), 0)\n        }\n      }\n      \n      \n  }\n  setToggle(){\n      this.setState({toggle:!this.state.toggle})\n  }\n  handleSelect(k){\n      if(k=='typingMode'){\n        setTimeout(()=> document.getElementById('promptBox').focus(), 0)\n      }\n  }\n  render() {\n    return (\n      <div id=\"lessonContainer\" className='contentstuff'>\n        <h1 id=\"title\">Touch Typing Practice</h1>\n        <Stats setToggle = {this.setToggle} tog = {this.state.toggle} data={this.props.data} enterKey={this.props.enterKey} enterStat={this.props.enterStat}/>\n        <br />\n        <div id='inputArea' >\n            <Tabs className='tabClass' onSelect = {this.handleSelect}>\n                <Tab eventKey='typingMode' title='Typing Mode' >\n                    <Render enterKey={this.props.enterKey} enterStat={this.props.enterStat} data={this.props.data} />\n                </Tab>\n                <Tab eventKey='statMode' title='Stats Mode'>\n                    <KeySummary data={this.props.data.update.error} />\n                </Tab>\n            </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default ReactRedux.connect(\n  (state) => ({ data: state }),\n  (dispatch) => ({\n    enterKey: (payload,type) => dispatch(enterKey(payload,type)),\n    enterStat:(type,payload) =>dispatch(enterStat(type,payload)),\n    setPrompt: (type,payload) => dispatch({type:type,payload:payload})\n  })\n)(App);","import React from 'react'\nimport {Container} from 'react-bootstrap'\nimport MyNavbar from './Navbar.js'\nimport Introduction from './Introduction.js'\nimport Feedback from './Feedback.js'\nimport About from './About.js'\nimport App from '../app/App.js'\nimport {BrowerRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport * as Redux from 'redux';\nimport {Provider} from 'react-redux'\nimport {enterKey, update} from '../app/enterKey.js'\nimport {enterStat, statUpdater} from '../app/statUpdater.js'\nimport setPrompt from '../app/setPrompt.js'\n\n\n\nfunction Home(){\n        return(\n            <div id='appcontainer' >\n            <MyNavbar />\n            <Switch>\n                <Container id='content' >\n                    <Route path= '/' component={Introduction} exact />\n                    <Route path='/about' component = {About} />\n                    <Route path='/feedback' component= {Feedback} />\n                    <Route path='/practice/:lesson?' component= {App} />\n                </Container>\n            </Switch>\n            </div>\n            )\n}\n\nconst combineReducer = Redux.combineReducers({update,statUpdater,setPrompt})\nconst store = Redux.createStore(combineReducer);\n\nexport default () => (\n    <Provider store={store}>\n      <Home />\n    </Provider>)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './homepage/Home.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\n//import './homepage/Home.css'\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Home />\n    </BrowserRouter>\n    , document.getElementById(\"root\"));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}